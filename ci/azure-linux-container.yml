parameters:
  interpreter: ''
  manylinux: ''
  path: ''
  target: ''
  toolchain: ''
  verifyManylinux: ''

steps:
- bash: curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain $(toolchain) --profile minimal -y
  displayName: rustup
- bash: PATH=$(path) rustup default $(toolchain)
  displayName: ensure toolchain
- bash: PATH=$(path) pip install --user --upgrade pip maturin==0.9.0 twine auditwheel
  displayName: build dependencies
- bash: PATH=$(path) maturin build --no-sdist --release --strip --manylinux $(manylinux) --interpreter $(interpreter) --target $(target)
  displayName: build
- bash: PATH=$(path) $(interpreter) -m auditwheel repair target/wheels/orjson*.whl
  displayName: verify that wheel conforms to manylinux tag
  condition: eq('${{ parameters.verifyManylinux }}', true)
- bash: PATH=$(path) $(interpreter) -m pip install --user target/wheels/orjson*.whl
  displayName: install
- bash: PATH=$(path) $(interpreter) -m pip install --user -r test/requirements.txt -r integration/requirements.txt
  displayName: test dependencies
- bash: PATH=$(path) pytest -s -rxX -v test
  displayName: pytest
- bash: PATH=$(path) $(interpreter) -m pip uninstall -y numpy
  displayName: remove optional packages
- bash: PATH=$(path) pytest -s -rxX -v test
  displayName: pytest without optional packages
- bash: PATH=$(path) ./integration/run thread
  displayName: thread
- bash: PATH=$(path) ./integration/run http
  displayName: http
- bash: PATH=$(path) ./ci/deploy target/wheels/*.whl
  displayName: deploy
  env:
    TWINE_PASSWORD: $(TWINE_PASSWORD)
    TWINE_USERNAME: $(TWINE_USERNAME)
